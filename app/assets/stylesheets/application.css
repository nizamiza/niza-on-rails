@import "reset.css" layer(reset);
@import "base.css" layer(base);
@import "utility.css" layer(utility);

@import "page.css";
@import "nav-panel.css";
@import "status-message.css";

@layer overwrite {
  .initial {
    all: initial;
  }

  .unset {
    all: unset;
  }

  .revert {
    all: revert;
  }

  :is(.initial, .unset, .revert) {
    color: inherit;

    &:focus-visible {
      --thickness: 1.5px;

      outline-style: solid;
      outline-width: var(--thickness);
      outline-color: hsl(var(--theme-accent));
      outline-offset: calc(var(--thickness) * 2);
    }

    &:is(button) {
      cursor: pointer;
    }
  }
}

body {
  display: grid;
  gap: 3rem 0rem;
  align-content: start;
  justify-content: center;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr) [main-start] minmax(0, var(--content-width))
    [main-end] minmax(1rem, 1fr) [full-end];

  & > main {
    display: grid;
    gap: inherit;
    grid-template-columns: subgrid;
  }

  & > * {
    grid-column: main-start / main-end;
  }

  & > .full {
    grid-column: full-start / full-end;
  }

  & > .page-header {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: full-start / full-end;
  }
}

p {
  max-width: 69ch;
}

button {
  display: inline-flex;
  gap: 0.75ch;
  justify-content: center;
  background-color: hsl(var(--theme-accent));
  color: var(--bg-color);
  border: 0;
  padding: 0.5em 1.5em;
  border-radius: var(--br-lg);
  font-weight: 500;
  cursor: pointer;

  &:focus-visible {
    color: var(--bg-color);
    background-color: var(--fg-color);
    outline-color: var(--fg-color);
  }
}

:is(ul, ol, dt) {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  margin: 0;
  padding-inline-start: 2.5rem;
}

form {
  display: grid;
  gap: 0.825rem;
  width: 100%;

  & > :is(p, textarea, .form-field:has(textarea)) {
    grid-column: 1 / -1;
  }

  & > [type="submit"] {
    grid-column: 1 / -1;
    justify-self: center;
    margin-top: 1rem;
  }

  @media (min-width: 768px) {
    grid-template-columns: 1fr 1fr;
  }
}

.big-emoji {
  font-size: 5rem;
}

.custom-scrollbar {
  --scrollbar-height: 0.325rem;
  --scrollbar-width: 0.5rem;
  --scrollbar-color: color-mix(in srgb, currentColor, transparent 80%);

  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-color) transparent;

  &::-webkit-scrollbar {
    width: var(--scrollbar-width);
    height: var(--scrollbar-height);
    border-radius: var(--br-full);
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-color);
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
}

.icon {
  display: inline-flex;
  width: 1.5em;
  height: 1.5em;
}

[class^="icon-"][aria-hidden="true"] {
  display: none;
}

.section {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  align-items: flex-start;

  &.stretch {
    align-items: stretch;
  }
}

.caption {
  font-family: var(--ff-mono);
  font-size: var(--fs-caption);
}

.card-array {
  --cols: 3;
  --gap: 1rem;
  --min-width-base: 20ch;
  --ideal-width: calc(100% / var(--cols) - var(--gap));
  --min-width: max(var(--ideal-width), var(--min-width-base));
  --max-width: 100%;
  --basis: clamp(var(--min-width), var(--ideal-width), var(--max-width));

  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: var(--gap);

  & > * {
    flex: 1 1 var(--basis);
  }
}
